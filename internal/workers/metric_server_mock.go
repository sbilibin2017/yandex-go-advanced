// Code generated by MockGen. DO NOT EDIT.
// Source: /home/sergey/Go/yandex-go-advanced/internal/workers/metric_server.go

// Package workers is a generated GoMock package.
package workers

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	types "github.com/sbilibin2017/yandex-go-advanced/internal/types"
)

// MockMetricContextSaver is a mock of MetricContextSaver interface.
type MockMetricContextSaver struct {
	ctrl     *gomock.Controller
	recorder *MockMetricContextSaverMockRecorder
}

// MockMetricContextSaverMockRecorder is the mock recorder for MockMetricContextSaver.
type MockMetricContextSaverMockRecorder struct {
	mock *MockMetricContextSaver
}

// NewMockMetricContextSaver creates a new mock instance.
func NewMockMetricContextSaver(ctrl *gomock.Controller) *MockMetricContextSaver {
	mock := &MockMetricContextSaver{ctrl: ctrl}
	mock.recorder = &MockMetricContextSaverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricContextSaver) EXPECT() *MockMetricContextSaverMockRecorder {
	return m.recorder
}

// Save mocks base method.
func (m *MockMetricContextSaver) Save(ctx context.Context, metrics types.Metrics) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", ctx, metrics)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save.
func (mr *MockMetricContextSaverMockRecorder) Save(ctx, metrics interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockMetricContextSaver)(nil).Save), ctx, metrics)
}

// MockMetricContextLister is a mock of MetricContextLister interface.
type MockMetricContextLister struct {
	ctrl     *gomock.Controller
	recorder *MockMetricContextListerMockRecorder
}

// MockMetricContextListerMockRecorder is the mock recorder for MockMetricContextLister.
type MockMetricContextListerMockRecorder struct {
	mock *MockMetricContextLister
}

// NewMockMetricContextLister creates a new mock instance.
func NewMockMetricContextLister(ctrl *gomock.Controller) *MockMetricContextLister {
	mock := &MockMetricContextLister{ctrl: ctrl}
	mock.recorder = &MockMetricContextListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricContextLister) EXPECT() *MockMetricContextListerMockRecorder {
	return m.recorder
}

// List mocks base method.
func (m *MockMetricContextLister) List(ctx context.Context) ([]types.Metrics, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", ctx)
	ret0, _ := ret[0].([]types.Metrics)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockMetricContextListerMockRecorder) List(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockMetricContextLister)(nil).List), ctx)
}

// MockMetricFileSaver is a mock of MetricFileSaver interface.
type MockMetricFileSaver struct {
	ctrl     *gomock.Controller
	recorder *MockMetricFileSaverMockRecorder
}

// MockMetricFileSaverMockRecorder is the mock recorder for MockMetricFileSaver.
type MockMetricFileSaverMockRecorder struct {
	mock *MockMetricFileSaver
}

// NewMockMetricFileSaver creates a new mock instance.
func NewMockMetricFileSaver(ctrl *gomock.Controller) *MockMetricFileSaver {
	mock := &MockMetricFileSaver{ctrl: ctrl}
	mock.recorder = &MockMetricFileSaverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricFileSaver) EXPECT() *MockMetricFileSaverMockRecorder {
	return m.recorder
}

// Save mocks base method.
func (m *MockMetricFileSaver) Save(ctx context.Context, metrics types.Metrics) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", ctx, metrics)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save.
func (mr *MockMetricFileSaverMockRecorder) Save(ctx, metrics interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockMetricFileSaver)(nil).Save), ctx, metrics)
}

// MockMetricFileLister is a mock of MetricFileLister interface.
type MockMetricFileLister struct {
	ctrl     *gomock.Controller
	recorder *MockMetricFileListerMockRecorder
}

// MockMetricFileListerMockRecorder is the mock recorder for MockMetricFileLister.
type MockMetricFileListerMockRecorder struct {
	mock *MockMetricFileLister
}

// NewMockMetricFileLister creates a new mock instance.
func NewMockMetricFileLister(ctrl *gomock.Controller) *MockMetricFileLister {
	mock := &MockMetricFileLister{ctrl: ctrl}
	mock.recorder = &MockMetricFileListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricFileLister) EXPECT() *MockMetricFileListerMockRecorder {
	return m.recorder
}

// List mocks base method.
func (m *MockMetricFileLister) List(ctx context.Context) ([]types.Metrics, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", ctx)
	ret0, _ := ret[0].([]types.Metrics)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockMetricFileListerMockRecorder) List(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockMetricFileLister)(nil).List), ctx)
}
